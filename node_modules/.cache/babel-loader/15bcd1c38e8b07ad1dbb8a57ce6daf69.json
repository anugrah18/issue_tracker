{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anugrahk\\\\portfolio-projects\\\\issue_tracker\\\\src\\\\Components\\\\issuePage.js\";\nimport React, { Component } from 'react';\nimport Comment from './comments';\nexport default class IssuePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: [],\n      backendServer: 'http://localhost:8080/',\n      id: this.props.match.params.id,\n      currentComment: \"\",\n      currentCommentInfo: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.state.backendServer + \"issue/\" + this.state.id).then(response => response.json()).then(data => {\n      this.setState({\n        issue: data\n      });\n    }).catch(console.log);\n  }\n\n  addComment(event) {\n    event.preventDefault();\n    console.log(this.state.currentCommentInfo.commenterName);\n    fetch(this.state.backendServer + 'issue/comment/' + this.state.issue[0].issueId + '&' + this.state.currentCommentInfo.commenterName + '&' + this.state.currentCommentInfo.commentDate + '&' + this.state.currentCommentInfo.commentTime + '&' + this.state.currentCommentInfo.commenterPhoto + '&' + this.state.currentCommentInfo.commentText, {\n      method: 'POST',\n      headers: {\n        //'Accept': 'application/json',\n        'Content-Type': 'text/plain'\n      }\n    }).then(window.location.reload());\n  }\n\n  handleCommentChange(e) {\n    var today = new Date();\n    this.setState({\n      currentComment: e.target.value,\n      currentCommentInfo: {\n        \"commenterName\": sessionStorage.Name,\n        \"commenterPhoto\": encodeURIComponent(sessionStorage.Photo),\n        \"commentText\": encodeURIComponent(e.target.value),\n        \"commentDate\": encodeURIComponent(today.getMonth() + \"/\" + today.getDate() + \"/\" + today.getFullYear()),\n        \"commentTime\": encodeURIComponent(today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds())\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"issueDisplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.issue.map(issue => React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, issue.issueId, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.issueTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, issue.details), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Submitted by\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.submitter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Date of creation\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.dateOfCreation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Expected completion date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      value: issue.expectedCompletionDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Assigned to\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.assignee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"priorityGroupSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, issue.priority == \"Low\" ? React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Low\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Low\"), React.createElement(\"option\", {\n      value: \"High\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"High\")) : React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Low\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Low\"), React.createElement(\"option\", {\n      value: \"High\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"High\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"statusGroupSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, issue.status == \"Open\" ? React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Open\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"Closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Closed\")) : React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"Closed\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Closed\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Affected User ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.affectedUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Save Issue\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      commentlist: issue.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"addComment\",\n      rows: \"3\",\n      placeholder: \"add comment\",\n      value: this.state.currentComment,\n      onChange: event => this.handleCommentChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      id: \"addCommentButton\",\n      onClick: event => this.addComment(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Add comment\"), React.createElement(React.Fragment, null)))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anugrahk/portfolio-projects/issue_tracker/src/Components/issuePage.js"],"names":["React","Component","Comment","IssuePage","constructor","props","state","issue","backendServer","id","match","params","currentComment","currentCommentInfo","componentDidMount","fetch","then","response","json","data","setState","catch","console","log","addComment","event","preventDefault","commenterName","issueId","commentDate","commentTime","commenterPhoto","commentText","method","headers","window","location","reload","handleCommentChange","e","today","Date","target","value","sessionStorage","Name","encodeURIComponent","Photo","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","render","map","issueTitle","details","category","submitter","dateOfCreation","expectedCompletionDate","assignee","priority","status","affectedUserId","comments"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react'\r\nimport Comment from './comments'\r\n\r\nexport default class IssuePage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            issue:[],\r\n            backendServer: 'http://localhost:8080/',                        \r\n            id:this.props.match.params.id,\r\n            currentComment:\"\",\r\n            currentCommentInfo:[]\r\n        }        \r\n        \r\n    };\r\n    componentDidMount(){\r\n        fetch(this.state.backendServer +\"issue/\"+ this.state.id)\r\n        .then(response=>response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                issue:data,\r\n            })\r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n    addComment(event){\r\n        event.preventDefault();\r\n        console.log(this.state.currentCommentInfo.commenterName);\r\n\r\n\r\n        fetch(this.state.backendServer+'issue/comment/'+this.state.issue[0].issueId+'&'\r\n        +this.state.currentCommentInfo.commenterName+'&'\r\n        +this.state.currentCommentInfo.commentDate+'&'\r\n        +this.state.currentCommentInfo.commentTime+'&'\r\n        +this.state.currentCommentInfo.commenterPhoto+'&'\r\n        +this.state.currentCommentInfo.commentText\r\n        , {\r\n            method: 'POST',  \r\n             headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'text/plain',\r\n            },         \r\n            \r\n        })\r\n        .then(window.location.reload())\r\n    }\r\n\r\n    handleCommentChange(e){\r\n        var today = new Date();      \r\n\r\n        this.setState({\r\n            currentComment:e.target.value,\r\n            currentCommentInfo:\r\n            {\r\n            \"commenterName\":sessionStorage.Name,\r\n            \"commenterPhoto\":encodeURIComponent(sessionStorage.Photo),\r\n            \"commentText\":encodeURIComponent(e.target.value),\r\n            \"commentDate\":encodeURIComponent(today.getMonth()+\"/\"+today.getDate()+\"/\"+today.getFullYear()),\r\n            \"commentTime\": encodeURIComponent(today.getHours()+\":\"+today.getMinutes()+\":\"+today.getSeconds())\r\n            }\r\n        })        \r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"issueDisplay\">                \r\n                 {this.state.issue.map((issue) => (\r\n                     <div className=\"card\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"card-header\">\r\n                                    {issue.issueId}\r\n                                    <input type=\"text\" className=\"form-control\" value={issue.issueTitle}></input>\r\n                                </div>\r\n                                <div className=\"card-body\">                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"description\">Description</label>\r\n                                        <textarea className=\"form-control\" id=\"description\" rows=\"3\">{issue.details}</textarea>\r\n                                        <hr></hr>\r\n                                        <label>Category</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.category}></input>\r\n                                        <hr></hr>\r\n                                        <label>Submitted by</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.submitter}></input>\r\n                                        <hr></hr>\r\n                                        <label>Date of creation</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.dateOfCreation}></input>\r\n                                        <hr></hr>\r\n                                        <label>Expected completion date</label>\r\n                                        <input type=\"date\" className=\"form-control\" value={issue.expectedCompletionDate}></input>\r\n                                        <hr></hr>\r\n                                        <label>Assigned to</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.assignee}></input>\r\n                                        <hr></hr>                                        \r\n                                        <label>Priority</label>                                                                            \r\n                                            <select className=\"custom-select\" id=\"priorityGroupSelect\">\r\n                                                {issue.priority==\"Low\"?\r\n                                                <>\r\n                                                    <option value=\"Low\" selected>Low</option>                                               \r\n                                                    <option value=\"High\">High</option>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <option value=\"Low\">Low</option>                                               \r\n                                                    <option value=\"High\" selected>High</option>\r\n                                                </> \r\n                                                }\r\n                                            </select>\r\n                                        <hr></hr>\r\n                                        <label>Status</label>                                                                            \r\n                                        <select className=\"custom-select\" id=\"statusGroupSelect\">\r\n                                            \r\n                                            {issue.status==\"Open\"?\r\n                                            <>\r\n                                                <option value=\"Open\" selected>Open</option>                                               \r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <option value=\"Open\">Open</option>                                               \r\n                                                <option value=\"Closed\" selected>Closed</option>\r\n                                            </> \r\n                                            }                                      \r\n                                        \r\n                                        </select>\r\n                                        <hr></hr>\r\n                                        <label>Affected User ID</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.affectedUserId}></input>\r\n                                        \r\n                                        <button class=\"btn btn-primary\">Save Issue</button>\r\n                                        <hr></hr>                                                                              \r\n                                       \r\n\r\n                                    </div>\r\n                                    <div className=\"card-footer\" >\r\n                                    </div>\r\n                                        <Comment commentlist={issue.comments}></Comment>\r\n                                        <textarea className=\"form-control\" id=\"addComment\" rows=\"3\" placeholder=\"add comment\" value={this.state.currentComment} onChange={(event)=>this.handleCommentChange(event)}></textarea>\r\n                                        <button className=\"btn btn-light\" id=\"addCommentButton\" onClick={(event) => this.addComment(event)}>Add comment</button>\r\n                                                                               \r\n                                        <></>\r\n                                </div>                            \r\n                            </div>\r\n                        </form>\r\n                     </div>\r\n                 ))}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}