{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anugrahk\\\\portfolio-projects\\\\issue_tracker\\\\src\\\\Components\\\\issuePage.js\";\nimport React, { Component } from 'react';\nimport Comment from './comments';\nexport default class IssuePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issue: [],\n      backendServer: 'http://localhost:8080/',\n      id: this.props.match.params.id,\n      currentComment: \"\",\n      currentCommentInfo: [],\n      currentPriority: \"\",\n      currentStatus: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.state.backendServer + \"issue/\" + this.state.id).then(response => response.json()).then(data => {\n      this.setState({\n        issue: data,\n        currentPriority: data[0].priority,\n        currentStatus: data[0].status\n      });\n    }).catch(console.log);\n  }\n\n  addComment(event) {\n    event.preventDefault(); //console.log(this.state.currentCommentInfo.commenterName);\n\n    fetch(this.state.backendServer + 'issue/comment/' + this.state.issue[0].issueId + '&' + this.state.currentCommentInfo.commenterName + '&' + this.state.currentCommentInfo.commentDate + '&' + this.state.currentCommentInfo.commentTime + '&' + this.state.currentCommentInfo.commenterPhoto + '&' + this.state.currentCommentInfo.commentText, {\n      method: 'POST',\n      headers: {\n        //'Accept': 'application/json',\n        'Content-Type': 'text/plain'\n      }\n    }).then(window.location.reload());\n  }\n\n  handleCommentChange(e) {\n    var today = new Date();\n    this.setState({\n      currentComment: e.target.value,\n      currentCommentInfo: {\n        \"commenterName\": sessionStorage.Name,\n        \"commenterPhoto\": encodeURIComponent(sessionStorage.Photo),\n        \"commentText\": encodeURIComponent(e.target.value),\n        \"commentDate\": encodeURIComponent(today.getMonth() + 1 + \"/\" + today.getDate() + \"/\" + today.getFullYear()),\n        \"commentTime\": encodeURIComponent(today.getHours() + \":\" + today.getMinutes())\n      }\n    });\n  }\n\n  handlePriorityChange(event) {\n    this.setState({\n      currentPriority: event.target.value\n    });\n  }\n\n  handleStatusChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      currentStatus: event.target.value\n    });\n  }\n\n  SaveForm(event) {\n    if (sessionStorage.Name == this.state.issue[0].assignee) {\n      this.postSaveForm(event);\n    } else {\n      alert(\"Only User assigned to issue can edit\");\n    }\n  }\n\n  postSaveForm(event) {\n    event.preventDefault();\n    fetch(this.state.backendServer + 'editIssue/' + this.state.issue[0].issueId + '&' + this.state.currentPriority + '&' + this.state.currentStatus, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(alert(\"Successfully saved\")).then(window.location.reload());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"issueDisplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.issue.map(issue => React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, issue.issueId, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.issueTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"description\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, issue.details), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Submitted by\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.submitter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Date of creation\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.dateOfCreation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Expected completion date\"), React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      value: issue.expectedCompletionDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Assigned to\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.assignee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"priorityGroupSelect\",\n      onChange: event => this.handlePriorityChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.currentPriority == \"Low\" ? React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Low\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Low\"), React.createElement(\"option\", {\n      value: \"High\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"High\")) : React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Low\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Low\"), React.createElement(\"option\", {\n      value: \"High\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"High\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"statusGroupSelect\",\n      onChange: event => this.handleStatusChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.currentStatus == \"Open\" ? React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Open\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"Closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Closed\")) : React.createElement(React.Fragment, null, React.createElement(\"option\", {\n      value: \"Open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      value: \"Closed\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Closed\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Affected User ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: issue.affectedUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: event => this.SaveForm(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Save Issue\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      commentlist: issue.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"addComment\",\n      rows: \"3\",\n      placeholder: \"add comment\",\n      value: this.state.currentComment,\n      onChange: event => this.handleCommentChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      id: \"addCommentButton\",\n      onClick: event => this.addComment(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Add comment\"), React.createElement(React.Fragment, null)))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/anugrahk/portfolio-projects/issue_tracker/src/Components/issuePage.js"],"names":["React","Component","Comment","IssuePage","constructor","props","state","issue","backendServer","id","match","params","currentComment","currentCommentInfo","currentPriority","currentStatus","componentDidMount","fetch","then","response","json","data","setState","priority","status","catch","console","log","addComment","event","preventDefault","issueId","commenterName","commentDate","commentTime","commenterPhoto","commentText","method","headers","window","location","reload","handleCommentChange","e","today","Date","target","value","sessionStorage","Name","encodeURIComponent","Photo","getMonth","getDate","getFullYear","getHours","getMinutes","handlePriorityChange","handleStatusChange","SaveForm","assignee","postSaveForm","alert","render","map","issueTitle","details","category","submitter","dateOfCreation","expectedCompletionDate","affectedUserId","comments"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react'\r\nimport Comment from './comments'\r\n\r\nexport default class IssuePage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            issue:[],\r\n            backendServer: 'http://localhost:8080/',                        \r\n            id:this.props.match.params.id,\r\n            currentComment:\"\",\r\n            currentCommentInfo:[],\r\n            currentPriority:\"\",\r\n            currentStatus:\"\",\r\n        }        \r\n        \r\n    };\r\n    componentDidMount(){\r\n        fetch(this.state.backendServer +\"issue/\"+ this.state.id)\r\n        .then(response=>response.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                issue:data,\r\n                currentPriority:data[0].priority,\r\n                currentStatus:data[0].status\r\n            })\r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n    addComment(event){\r\n        event.preventDefault();\r\n        //console.log(this.state.currentCommentInfo.commenterName);\r\n\r\n\r\n        fetch(this.state.backendServer+'issue/comment/'+this.state.issue[0].issueId+'&'\r\n        +this.state.currentCommentInfo.commenterName+'&'\r\n        +this.state.currentCommentInfo.commentDate+'&'\r\n        +this.state.currentCommentInfo.commentTime+'&'\r\n        +this.state.currentCommentInfo.commenterPhoto+'&'\r\n        +this.state.currentCommentInfo.commentText\r\n        , {\r\n            method: 'POST',  \r\n             headers: {\r\n                //'Accept': 'application/json',\r\n                'Content-Type': 'text/plain',\r\n            },         \r\n            \r\n        })\r\n        .then(window.location.reload())\r\n    }\r\n\r\n    handleCommentChange(e){\r\n        var today = new Date();      \r\n\r\n        this.setState({\r\n            currentComment:e.target.value,\r\n            currentCommentInfo:\r\n            {\r\n            \"commenterName\":sessionStorage.Name,\r\n            \"commenterPhoto\":encodeURIComponent(sessionStorage.Photo),\r\n            \"commentText\":encodeURIComponent(e.target.value),\r\n            \"commentDate\":encodeURIComponent((today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getFullYear()),\r\n            \"commentTime\": encodeURIComponent(today.getHours()+\":\"+today.getMinutes())\r\n            }\r\n        })        \r\n    }\r\n\r\n    handlePriorityChange(event){\r\n        this.setState({\r\n           currentPriority:event.target.value\r\n        })\r\n    }\r\n    \r\n    handleStatusChange(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n           currentStatus:event.target.value\r\n        })\r\n    }\r\n\r\n    SaveForm(event)\r\n    {\r\n        \r\n        if(sessionStorage.Name==this.state.issue[0].assignee)\r\n        {\r\n            this.postSaveForm(event)\r\n        }\r\n        else\r\n        {\r\n           alert(\"Only User assigned to issue can edit\")\r\n\r\n        }\r\n\r\n    }\r\n\r\n    postSaveForm(event){\r\n    event.preventDefault();\r\n      fetch(this.state.backendServer+'editIssue/'+this.state.issue[0].issueId+'&'+this.state.currentPriority+'&'+this.state.currentStatus,\r\n      {\r\n        method:'POST',  \r\n        headers: {                \r\n                'Content-Type': 'text/plain',\r\n        }, \r\n      })\r\n      .then(alert(\"Successfully saved\"))\r\n      .then(window.location.reload())\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"issueDisplay\">                \r\n                 {this.state.issue.map((issue) => (\r\n                     <div className=\"card\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"card-header\">\r\n                                    {issue.issueId}\r\n                                    <input type=\"text\" className=\"form-control\" value={issue.issueTitle}></input>\r\n                                </div>\r\n                                <div className=\"card-body\">                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"description\">Description</label>\r\n                                        <textarea className=\"form-control\" id=\"description\" rows=\"3\">{issue.details}</textarea>\r\n                                        <hr></hr>\r\n                                        <label>Category</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.category}></input>\r\n                                        <hr></hr>\r\n                                        <label>Submitted by</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.submitter}></input>\r\n                                        <hr></hr>\r\n                                        <label>Date of creation</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.dateOfCreation}></input>\r\n                                        <hr></hr>\r\n                                        <label>Expected completion date</label>\r\n                                        <input type=\"date\" className=\"form-control\" value={issue.expectedCompletionDate}></input>\r\n                                        <hr></hr>\r\n                                        <label>Assigned to</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.assignee}></input>\r\n                                        <hr></hr>                                        \r\n                                        <label>Priority</label>                                                                            \r\n                                            <select className=\"custom-select\" id=\"priorityGroupSelect\" onChange={(event)=>this.handlePriorityChange(event)}>\r\n                                                {this.state.currentPriority==\"Low\"?\r\n                                                <>\r\n                                                    <option value=\"Low\" selected>Low</option>                                               \r\n                                                    <option value=\"High\">High</option>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <option value=\"Low\">Low</option>                                               \r\n                                                    <option value=\"High\" selected>High</option>\r\n                                                </> \r\n                                                }\r\n                                            </select>\r\n                                        <hr></hr>\r\n                                        <label>Status</label>                                                                            \r\n                                        <select className=\"custom-select\" id=\"statusGroupSelect\" onChange={(event)=>this.handleStatusChange(event)}>\r\n                                            \r\n                                            {this.state.currentStatus==\"Open\"?\r\n                                            <>\r\n                                                <option value=\"Open\" selected>Open</option>                                               \r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <option value=\"Open\">Open</option>                                               \r\n                                                <option value=\"Closed\" selected>Closed</option>\r\n                                            </> \r\n                                            }                                      \r\n                                        \r\n                                        </select>\r\n                                        <hr></hr>\r\n                                        <label>Affected User ID</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={issue.affectedUserId}></input>\r\n                                        \r\n                                        <button class=\"btn btn-primary\" onClick={(event) => this.SaveForm(event)}>Save Issue</button>\r\n                                        <hr></hr>                                                                              \r\n                                       \r\n\r\n                                    </div>\r\n                                    <div className=\"card-footer\" >\r\n                                    </div>\r\n                                        <Comment commentlist={issue.comments}></Comment>\r\n                                        <textarea className=\"form-control\" id=\"addComment\" rows=\"3\" placeholder=\"add comment\" value={this.state.currentComment} onChange={(event)=>this.handleCommentChange(event)}></textarea>\r\n                                        <button className=\"btn btn-light\" id=\"addCommentButton\" onClick={(event) => this.addComment(event)}>Add comment</button>\r\n                                                                               \r\n                                        <></>\r\n                                </div>                            \r\n                            </div>\r\n                        </form>\r\n                     </div>\r\n                 ))}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}